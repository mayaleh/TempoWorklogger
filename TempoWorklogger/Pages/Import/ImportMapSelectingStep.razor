@page "/import/select-map"

<StepFlows ActualStep="Model.ImportSteps.Template" />

<div class="row">
    <div class="col">
        <h3>Choose import mapping template</h3>
    </div>
    <div class="col-auto">
        <CancalWizard />
    </div>
    <div class="col-auto">
        <GoBack PrevPage="/import/select-file" />
    </div>
</div>

@if (this.isReady == false)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    return;
}

@if (string.IsNullOrWhiteSpace(this.errorMessage) == false)
{
    <div class="alert alert-danger" role="alert">
        @this.errorMessage
    </div>
    return;
}

<div class="row mt-2 mb-2">
    <div class="col-12">
        <select class="form-select" aria-label="Template import select" @bind="selectedMap">
            <option value="@string.Empty">-- Select template --</option>
            @foreach (var map in importMaps)
            {
                <option value="@map.Name">@map.Name</option>
            }
        </select>
    </div>
</div>

@if (selectedMap != null && string.IsNullOrWhiteSpace(selectedMap) == false)
{
    <div class="row mb-2">
        <div class="col-12">
            <h4 class="mb-2">Selected import mapping template</h4>
            <p><strong>Starting from row:</strong> @ImportState.ImportMap.StartFromRow</p>

            <p>Constants (for all worklogs always the same value):</p>
            <ul class="mt-1">
                @foreach (var columnDef in StaticValues)
                {
                    <li><strong>@columnDef.Name:</strong> @columnDef.Value</li>
                }
            </ul>
            <p>Excel template:</p>
            <table class="table table-bordered table-sm">
                <thead>
                    <tr class="cells-positions">
                        <td scope="col">#</td>
                        @foreach (var columnDef in ExcelCells)
                        {
                            <td scope="col">@columnDef.Position</td>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr class="cells-positions">
                        <td scope="row">
                            @if (ImportState.ImportMap.StartFromRow > 1)
                            {
                                <span>1</span>
                            }
                        </td>

                        @foreach (var columnDef in ExcelCells) // todo why, just why...
                        {
                            <td><strong>@columnDef.Name</strong></td>
                        }
                    </tr>
                    @if (ImportState.ImportMap.StartFromRow > 1)
                    {
                        <tr>
                            <td scope="row" class="startFromRow">

                                <span>@ImportState.ImportMap.StartFromRow</span>
                            </td>
                            @foreach (var columnDef in ExcelCells) // todo why, just why...
                            {
                                <td>@columnDef.Name-value</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-12">
            <button class="btn btn-primary" @onclick="OnNextClicked">Preview data</button>
        </div>
    </div>
}
