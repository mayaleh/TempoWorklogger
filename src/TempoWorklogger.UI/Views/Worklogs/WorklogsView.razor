@*
<div class="modal fade" id="deleteItemModal" tabindex="-1" aria-labelledby="deleteItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteItemModalLabel">Confirm deleting item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you realy want to delete the worklog? This operation is permanent and will be deleted only on your local machine...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" data-bs-dismiss="modal" @onclick="@(() => ViewModel.DeleteCommand.Execute())" class="btn btn-primary">Yes, I know what I am doing!</button>
            </div>
        </div>
    </div>
</div>*@

<TempoWorklogger.UI.Dialogs.DialogView Identifier="deleteItemModal" Title="Confirm deleting item" ConfirmButtonText="Yes, I know what I am doing!" OnConfirmClicked="@(() => ViewModel.DeleteCommand.Execute())">
    <Content>
        <p>Do you realy want to delete the worklog? This operation is permanent and will be deleted only on your local machine...</p>
    </Content>
</TempoWorklogger.UI.Dialogs.DialogView>

<TempoWorklogger.UI.Dialogs.DialogView Identifier="sendToTempoModal" Title="Send to tempo preview" Width="80%">
    <Content>
        <CascadingValue Name="@(nameof(TempoWorklogger.Contract.UI.ViewModels.Worklogs.IWorklogsViewModel))" Value="@ViewModel">
            <SendToView />
        </CascadingValue>
    </Content>
    <ButtonsContent>
        <span></span>
    </ButtonsContent>
</TempoWorklogger.UI.Dialogs.DialogView>

<div class="row mb-2">
    <div class="col-auto">
        <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="add_circle_outline" Text="Add simplified" Click="@InsertRow" Disabled=@(worklogToInsert != null || worklogToUpdate != null) />
    </div>
    <div class="col-auto">
        <RadzenMenu>
            <RadzenMenuItem Text="More actions" Icon="line_weight">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="add_circle_outline" Text="Add detailed" Click="@ViewModel.CreateDetailedCommand.Execute" Disabled=@(worklogToInsert != null || worklogToUpdate != null)></RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="delete" data-bs-toggle="modal" data-bs-target="#deleteItemModal" Text="Delete selected" Disabled=@(ViewModel.SelectedWorklogs == null || !ViewModel.SelectedWorklogs.Any())></RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="backup" data-bs-toggle="modal" data-bs-target="#sendToTempoModal" Text="Send selected to Tempo API" Disabled=@(ViewModel.SelectedWorklogs == null || !ViewModel.SelectedWorklogs.Any())></RadzenButton>
            </RadzenMenuItem>
        </RadzenMenu>
    </div>
</div>

@*TODO: actions: Batch actions like delete, send to somewhere (Tempo primary and other integrations..)*@

<div class="row mb-2">
    <div class="col-12">
        <RadzenDataGrid @ref="worklogsGrid"
                        Data="@ViewModel.Worklogs"
                        TItem="Model.Db.Worklog"
                        AllowAlternatingRows="false"
                        EditMode="DataGridEditMode.Multiple"
                        AllowSorting="true"
                        AllowMultiColumnSorting="true"
                        AllowPaging="true"
                        PageSize="rowsNumber"
                        AllowFiltering="true"
                        RowUpdate="@OnUpdateRow"
                        RowCreate="@OnCreateRow"
                        AllowRowSelectOnRowClick="false"
                        @bind-Value=@ViewModel.SelectedWorklogs
                        SelectionMode="DataGridSelectionMode.Multiple">
            <Columns>
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Width="60px" Sortable="false" Filterable="false">
                    <HeaderTemplate>
                        <RadzenCheckBox TriState="false" TValue="bool" Value="@(ViewModel.Worklogs.Any(i => ViewModel.SelectedWorklogs != null && ViewModel.SelectedWorklogs.Contains(i)))"
                                        Change="@(args => ViewModel.SelectedWorklogs = args ? ViewModel.Worklogs : new() )" />
                    </HeaderTemplate>
                    <Template Context="data">
                        <RadzenCheckBox TriState="false" Value="@(ViewModel.SelectedWorklogs != null && ViewModel.SelectedWorklogs.Contains(data))"
                                        TValue="bool" Change=@(args => worklogsGrid!.SelectRow(data)) />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Property="@nameof(Model.Db.Worklog.Id)" Width="100px" Title="ID" />
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Property="@nameof(Model.Db.Worklog.IssueKey)" Width="160px" Title="Issue">
                    <EditTemplate Context="worklog">
                        <RadzenTextBox @bind-Value="worklog.IssueKey" Name="IssueKey" Style="width:100%" />
                        <RadzenRequiredValidator Text="Issue key is required" Component="IssueKey" Popup="true" />
                    </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Property="@nameof(Model.Db.Worklog.StartTime)" Width="175px" Title="Started">
                    <EditTemplate Context="worklog">
                        <RadzenDatePicker @bind-Value="worklog.StartTime" ShowTime=true ShowTimeOkButton=true Style ="width:100%" />
                    </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Property="@nameof(Model.Db.Worklog.EndTime)" Width="175px" Title="Ended">
                    <EditTemplate Context="worklog">
                        <RadzenDatePicker @bind-Value="worklog.EndTime" ShowTime=true ShowTimeOkButton=true Style="width:100%" />
                    </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Model.Db.Worklog" Property="@nameof(Model.Db.Worklog.Description)" Title="Description">
                    <EditTemplate Context="worklog">
                        <RadzenTextArea @bind-Value="worklog.Description" Style="width:100%" />
                    </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn CssClass="ui-cell-menu" TItem="Model.Db.Worklog" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="200px">
                    <Template Context="worklog">
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRow(worklog))" @onclick:stopPropagation="true"></RadzenButton>
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" data-bs-toggle="modal" data-bs-target="#deleteItemModal" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Class="my-1 ms-1" Click="@(args => ViewModel.PrepareDeleteCommand.Execute(worklog))">
                        </RadzenButton>
                        <span> | </span>
                        <RadzenButton Shade="Shade.Lighter" Click=@(args => ViewModel.EditCommand.Execute(worklog.Id)) Icon="edit" title="Edit detail" ButtonStyle="ButtonStyle.Light" />
                        <RadzenButton Shade="Shade.Lighter" Click=@(args => DuplicateRow(worklog)) Icon="add_to_photos" title="Duplicate inline" ButtonStyle="ButtonStyle.Light" />
                        @*<RadzenMenu Style="z-index:1000">
                            <RadzenMenuItem Icon="line_weight">
                                <RadzenButton Shade="Shade.Lighter" Click=@(args => ViewModel.EditCommand.Execute(worklog.Id)) Icon="edit" Text="Edit detail" ButtonStyle="ButtonStyle.Light" />
                                <RadzenButton Shade="Shade.Lighter" Click=@(args => DuplicateRow(worklog)) Icon="copy" Text="Duplicate inline" ButtonStyle="ButtonStyle.Light" />
                            </RadzenMenuItem>
                        </RadzenMenu>*@

                    </Template>
                    <EditTemplate Context="worklog">
                        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRow(worklog))">
                        </RadzenButton>
                        <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Class="my-1 ms-1" Click="@((args) => CancelEdit(worklog))">
                        </RadzenButton>
                    </EditTemplate>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

<div class="row mb-2">
    <div class="col-auto">
        <span>Rows count per page:</span>
        <RadzenNumeric @bind-Value="rowsNumber" TValue="int" Change=@(args => worklogsGrid!.Reload()) />
        <RadzenButton Icon="autorenew" ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Text="Reload" Size="ButtonSize.Medium" Class="my-1 ms-1" Click=@(args => worklogsGrid!.Reload())>
        </RadzenButton>
    </div>
</div>