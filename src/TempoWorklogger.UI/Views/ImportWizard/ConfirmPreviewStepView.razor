@using TempoWorklogger.Model.Db

@if (ViewModel.IsBusy)
{
    <CascadingValue Name="@(nameof(TempoWorklogger.Contract.UI.ViewModels.Common.IProgressViewModel))" Value="@ViewModel">
        <TempoWorklogger.UI.Commons.ProgressBar ProcessMessage="Transforming data from the file..." />
    </CascadingValue>
    return;
}

@if (ViewModel.ImportWizardState.WorklogsFileResults == null)
{

    <p>No data loaded...</p>
    return;
}

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="tableview-tab" data-bs-toggle="tab" data-bs-target="#tableview" type="button" role="tab" aria-controls="tableview" aria-selected="true">Table view</button>
    </li>
    @*<li class="nav-item" role="presentation">
        <button class="nav-link" id="jsonview-tab" data-bs-toggle="tab" data-bs-target="#jsonview" type="button" role="tab" aria-controls="jsonview" aria-selected="false">JSON view</button>
    </li>*@
</ul>

<div class="tab-content overflow-auto" style="max-width: 100%" id="myTabContent">
    <div class="tab-pane fade show active" id="tableview" role="tabpanel" aria-labelledby="tableview-tab">
        <div class="row">
            <div class="col-12">
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr class="cells-positions">
                            <td scope="col">@(nameof(Worklog.IssueKey))</td>
                            <td scope="col">@(nameof(Worklog.Description))</td>
                            <td scope="col">@(nameof(Worklog.StartTime))</td>
                            <td scope="col">@(nameof(Worklog.EndTime))</td>
                            <td scope="col">@(nameof(Worklog.TimeSpentSeconds))</td>
                            <td scope="col">@(nameof(Worklog.Attributes))</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var worklogResult in ViewModel.ImportWizardState.WorklogsFileResults)
                        {

                            @if (worklogResult.IsFailure)
                            {
                                <tr class="bg-danger">
                                    <td colspan="8">On row:@(worklogResult.Failure.RowNr) Error: @(worklogResult.Failure.Exception.Message)</td>
                                </tr>
                                continue;
                            }
                            <tr>
                                <td>@(worklogResult.Success.IssueKey)</td>
                                <td>@(worklogResult.Success.Description)</td>
                                <td>@(worklogResult.Success.StartTime)</td>
                                <td>@(worklogResult.Success.EndTime)</td>
                                <td>@(worklogResult.Success.TimeSpentSeconds)</td>

                                <td>
                                    @if (worklogResult.Success.Attributes != null && worklogResult.Success.Attributes.Any())
                                    {
                                        foreach (var attr in worklogResult.Success.Attributes)
                                        {
                                            <span class="px-1">@attr.Key: @attr.Value</span>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @*Maybe redutant in this step, move to step, where is executed the sending data to Tempo or other app*@
    @*<div class="tab-pane fade" id="jsonview" role="tabpanel" aria-labelledby="jsonview-tab">
        @foreach (var worklogResult in ViewModel.ImportWizardState.WorklogsFileResults)
        {
            if (worklogResult.IsFailure)
            {
                <p class="bg-danger p-1">On row:@(worklogResult.Failure.RowNr) Error: @(worklogResult.Failure.Exception.Message)</p>
                continue;
            }

            <pre><code>@System.Text.Json.JsonSerializer.Serialize(worklogResult.Success, jsonOptions)</code></pre>
        }
    </div>*@
</div>